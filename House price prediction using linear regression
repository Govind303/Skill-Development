!pip install gradio scikit-learn pandas

import gradio as gr
import pandas as pd
from sklearn.datasets import fetch_california_housing
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Load California Housing dataset (since Boston is deprecated)
data = fetch_california_housing()
X = pd.DataFrame(data.data, columns=data.feature_names)
y = data.target

# Scale features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_scaled, y)

# Define prediction function
def predict_price(MedInc, HouseAge, AveRooms, AveBedrms, Population, AveOccup, Latitude, Longitude):
    input_data = pd.DataFrame([[MedInc, HouseAge, AveRooms, AveBedrms, Population, AveOccup, Latitude, Longitude]],
                              columns=X.columns)
    input_scaled = scaler.transform(input_data)
    prediction = model.predict(input_scaled)[0]
    return f"Predicted Median House Value: ${prediction * 100000:.2f}"

# Gradio UI
inputs = [
    gr.Number(label="Median Income (MedInc)"),
    gr.Number(label="House Age"),
    gr.Number(label="Average Rooms (AveRooms)"),
    gr.Number(label="Average Bedrooms (AveBedrms)"),
    gr.Number(label="Population"),
    gr.Number(label="Average Occupancy (AveOccup)"),
    gr.Number(label="Latitude"),
    gr.Number(label="Longitude")
]

gr.Interface(
    fn=predict_price,
    inputs=inputs,
    outputs=gr.Textbox(label="Predicted Price"),
    title="California Housing Price Predictor",
    description="Predict housing prices using linear regression based on California housing data."
).launch()
