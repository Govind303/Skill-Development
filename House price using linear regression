import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import gradio as gr

# Sample data for house price prediction (replace with your own dataset)
data = {
    'bedrooms': [3, 4, 3, 2, 5],
    'sqft_living': [1500, 2000, 1800, 1200, 2500],
    'bathrooms': [2, 2.5, 2, 1.5, 3],
    'sqft_lot': [5000, 6000, 5500, 4000, 8000],
    'floors': [1, 2, 1, 1, 2],
    'price': [400000, 500000, 450000, 350000, 600000]
}

# Convert the sample data into a DataFrame
df = pd.DataFrame(data)

# Features and target variable
X = df[['bedrooms', 'sqft_living', 'bathrooms', 'sqft_lot', 'floors']]  # Example features
y = df['price']  # Target variable

# Split the data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Define the function to predict house price
def predict_house_price(bedrooms, sqft_living, bathrooms, sqft_lot, floors):
    features = [[bedrooms, sqft_living, bathrooms, sqft_lot, floors]]
    prediction = model.predict(features)
    return f"Predicted House Price: ${prediction[0]:,.2f}"

# Create Gradio interface
iface = gr.Interface(
    fn=predict_house_price,
    inputs=[
        gr.Number(label="Bedrooms"),
        gr.Number(label="Square Footage of Living Area"),
        gr.Number(label="Bathrooms"),
        gr.Number(label="Lot Size (sqft)"),
        gr.Number(label="Floors")
    ],
    outputs="text"
)

# Launch the Gradio app
iface.launch()
